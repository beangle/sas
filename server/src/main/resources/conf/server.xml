<?xml version="1.0" encoding="UTF-8"?>
<Sas version="0.8.1">
  <!--从这里下载webapp的各类依赖性，如果涉及到没有开源的包，可以改为自己的伺服-->
  <Repository remote="maven.aliyun.com/nexus/content/groups/public"/>

  <Engines>
    <Engine name="tomcat10" type="tomcat" version="10.0.0-M8">
      <!--添加必要的驱动,不需要容器提供数据源，可以删除-->
      <Jar uri="gav://org.postgresql:postgresql:42.2.6"/>
      <!--
      <Jar uri="gav://com.oracle:ojdbc14:11.2.0.1.0"/>
      -->
    </Engine>
  </Engines>

  <Farms>
    <Farm name="cdn" engine="tomcat10">
      <Options>-noverify -Xmx100M -Xms100M</Options>
      <Http maxThreads="200" acceptCount="200" />
      <Server name="server1" http="8080" />
    </Farm>

    <!--
      如果使用http/2协议，可以配置ca证书
      使用OpenSSL生成ca证书
      openssl genrsa -out ca.key 4096
      openssl req -new -x509 -days 1826 -key ca.key -out ca.crt
      可以参考 https://blog.didierstevens.com/2008/12/30/howto-make-your-own-cert-with-openssl/
    <Farm name="your_farm_name" engine="tomcat90">
      <JvmArgs opts="-noverify -Xmx500M -Xms500M"/>
      <Http maxThreads="200" acceptCount="200" />
      <Http2 maxThreads="200" acceptCount="200" caKeyFile="/path/to/caKeyFile.key" caFile="/path/to/ca.crt" />
      <Server name="server1" http="9080" http2="9443"/>
    </Farm>
    -->
  </Farms>

  <Resources>
    <!--
    <Resource  name="jdbc/datasource"   driverClassName="org.postgresql.Driver"
                      url="jdbc:postgresql://localhost:5432/postgres"   type="javax.sql.DataSource"
                      username="postgres"  password="postgres" />
    -->
  </Resources>

  <Webapps>
    <Webapp name="micdn" uri="gav://org.beangle.micdn:beangle-micdn-server:0.1.3"/>
    <!--
    <Webapp name="your_app_name" docBase="as.home/webapps/your_war_name">
      <ResourceRef ref="jdbc/datasource"/>
    </Webapp>
    -->
  </Webapps>

  <Deployments>
    <Deployment webapp="micdn" on="cdn" path=""/>
    <!--
    <Deployment webapp="your_app_name" on="your_farm_name" path="/context_path"/>
    -->
  </Deployments>
</Sas>
